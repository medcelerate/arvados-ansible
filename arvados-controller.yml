---
- hosts: arvados*
  tasks:
    - name: Add Arvados Repo
      yum_repository:
          name: arvados
          baseurl: http://rpm.arvados.org/CentOS/$releasever/os/$basearch/
          gpgkey: http://rpm.arvados.org/CentOS/RPM-GPG-KEY-curoverse
          gpgcheck: yes
          proxy: http://localhost:3180ÃŸ

- hosts: arvados-controller
  vars:
    proxy: http://localhost:3180
    cluster_id: "{{ lookup('password', '/dev/null length=5 chars=ascii_letters') }}"
    root_token: "{{ lookup('password', '/dev/null length=50 chars=ascii_letters') }}"
    manage_token: "{{ lookup('password', '/dev/null length=50 chars=ascii_letters') }}"
    rails_secret: "{{ lookup('password', '/dev/null length=50 chars=ascii_letters') }}"
    blob_key: "{{ lookup('password', '/dev/null length=50 chars=ascii_letters') }}"
    sso_secret: "{{ lookup('password', '/dev/null length=36 chars=ascii_letters') }}"
    cookie_secret: "{{ lookup('password', '/dev/null length=36 chars=ascii_letters') }}"
    provider_secret: "{{ lookup('password', '/dev/null length=50 chars=ascii_letters') }}"
    database_password: "{{ lookup('password', '/dev/null length=30 chars=ascii_letters') }}"
    base_host: "arvados.genomics.mscic.io"


  # Adds RVM and ruby
  roles:
    - { role: rvm.ruby,
        tags: ruby,
        rvm1_rubies: ['ruby-2.3.1'],
        rvm1_user: 'root'
      }

  tasks:
    - name: Add passenger repo
      yum_repository:
        name: passenger
        description: Passenger repo
        baseurl: https://oss-binaries.phusionpassenger.com/yum/passenger/el/$releasever/$basearch
        gpgkey: https://oss-binaries.phusionpassenger.com/auto-software-signing-gpg-key.txt
        gpgpcheck: yes
        proxy: http://localhost:3180
        sslcacert: /etc/pki/tls/certs/ca-bundle.crt

    - name: Install Dependencies
      yum:
        name:
          - nginx
          - gpg
          - curl
          - which
          - epel-release
          - yum-utils
          - pygpgme
          - nginx
          - passenger

    - name: Install Bundler
      gem:
        name: bundler

    - name: Load External DB vars
      include_vars:
        file: variables/db.yml
        name: database
      when: external_db

    - name: Create DB Variables
      set_fact:
        database:
          host: localhost
      when: not external_db

    - name: Write Arvados Config
      template:
        src: templates/arvados.config.j2
        dest: /etc/arvados/config.yml

    - name: Load Postgres
      include_role:
        name: ansible-role-scl
        vars:
          scl_manage_repo: true
          scl_packages:
            - {name: 'rh-postgresql95', state: 'latest'}
            - {name: 'rh-postgresql95-postgresql-contrib', state: 'latest'}
      when: not external_db

    - name: Initialize db
      command: scl enable rh-postgresql95 bash && postgresql-setup initdb
      when: not external_db

    - name: Update Postgres Conf
      postgresql_pg_hba:
        dest: /var/lib/pgsql/data/pg_hba.conf
        contype: host
        databases: all
        users: all
        source: ::1/128
        method: md5
        create: true
      when: not external_db

    - name: Start Postgres
      systemd:
        state: started
        name: rh-postgresql95-postgresql
        enabled: yes
      when: not external_db

    - name: Setup Postgres User
      postgresql_user:
        db: arvados_production
        name: arvados
        password: "{{ database_password }}"
        encrypted: yes
      when: not external_db


    - name: Setup Postgres Database
      postgresql_db:
        name: arvados_production
        encoding: UTF-8
        template: template0
        owner: arvados
      when: not external_db


    - name: Setup Postgres User
      postgresql_user:
        db: arvados_production
        name: arvados
        password: "{{ database_password }}"
        encrypted: yes
        login_host: "{{ db.host }}"
        login_password: "{{ db.password }}"
        login_user: "{{ db.user }}"
      when: external_db


    - name: Setup Postgres Database
      postgresql_db:
        name: arvados_production
        encoding: UTF-8
        template: template0
        owner: arvados
        login_host: "{{ db.host }}"
        login_password: "{{ db.password }}"
        login_user: "{{ db.user }}"
      when: external_db

    - name: Install Arvados Controller
      yum:
        name:
            - arvados-api-server
            - arvados-controller

    - name: Start nginx
      systemd:
        state: started
        name: nginx
        enabled: yes

    - name: Start Arvados ControlPlane
      systemd:
        state: started
        name: arvados-controller
        enabled: yes
